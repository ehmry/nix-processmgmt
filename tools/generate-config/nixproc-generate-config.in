#!/bin/bash -e

# Shows the usage of this command to the user

showUsage()
{
    me="$(basename "$0")"

    cat <<EOF
Usage: $me [OPTION] -P MANAGER PATH

Takes a JSON representation of a managed process configuration and translates
it to a process manager specific configuration.

Options:
  -P, --process-manager=MANAGER
                        Process manager to build for
      --create-managed-process-expr
                        Nix expression that composes a function that accepts the
                        parameters in the JSON configuration and translates it
                        to a process manager-specific configuration.
                        If no expression is provided, it will use the universal
                        translation function in the framework
      --state-dir       Changes the directory in which the state of the
                        processes are stored
      --runtime-dir     Changes the directory in which the PID files are stored
      --log-dir         Changes the directory in which the log files are stored
      --tmp-dir         Changes the directory in which temp files are stored
      --cache-dir       Changes the directory in which cache files are stored
      --spool-dir       Changes the directory in which spool files are stored
      --lock-dir        Changes the directory in which lock files are stored
      --lib-dir         Changes the directory in which state files are stored
      --force-disable-user-change
                        Forces to not create users, groups or change user
                        permissions
      --no-out-link     Do not create a symlink to the output path
      --show-trace      Shows a trace of the output
  -h, --help            Shows the usage of this command

Environment:
  NIXPROC_STATE_DIR    Changes the directory in which the state of the
                       processes is stored
  NIXPROC_RUNTIME_DIR  Changes the directory in which the PID files are stored
  NIXPROC_LOG_DIR      Changes the directory in which log files are stored
  NIXPROC_TMP_DIR      Changes the directory in which temp files are stored
  NIXPROC_CACHE_DIR    Changes the directory in which cache files are stored
  NIXPROC_SPOOL_DIR    Changes the directory in which spool files are stored
  NIXPROC_LOCK_DIR     Changes the directory in which lock files are stored
  NIXPROC_LIB_DIR      Changes the directory in which state files are stored
  NIXPROC_FORCE_DISABLE_USER_CHANGE
                       Forces to not create users, groups or change user
                       permissions
EOF
}

# Parse valid argument options

PARAMS=`@getopt@ -n $0 -o P:h -l process-manager:,create-managed-process-expr:,state-dir:,runtime-dir:,log-dir:,tmp-dir:,cache-dir:,spool-dir:,lock-dir:,lib-dir:,force-disable-user-change,no-out-link,show-trace,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

# Evaluate valid options

eval set -- "$PARAMS"

while [ "$1" != "--" ]
do
    case "$1" in
        -P|--process-manager)
            processManager="$2"
            ;;
        create-managed-process-expr)
            createManagedProcessExpr="$2"
            ;;
        --state-dir)
            stateDirArg="--state-dir $2"
            ;;
        --runtime-dir)
            runtimeDirArg="--runtime-dir $2"
            ;;
        --log-dir)
            logDirArg="--log-dir $2"
            ;;
        --tmp-dir)
            tmpDirArg="--tmp-dir $2"
            ;;
        --cache-dir)
            cacheDirArg="--cache-dir $2"
            ;;
        --spool-dir)
            spoolDirArg="--spool-dir $2"
            ;;
        --lock-dir)
            lockDirArg="--lock-dir $2"
            ;;
        --lib-dir)
            libDirArg="--lib-dir $2"
            ;;
        --force-disable-user-change)
            forceDisableUserChangeArg="--arg forceDisableUserChange true"
            ;;
        --no-out-link)
            noOutLinkArg="--no-out-link"
            ;;
        --show-trace)
            showTraceArg="--show-trace"
            ;;
        -h|--help)
            showUsage
            exit 0
            ;;
    esac

    shift
done

shift

configFile="$1"

# Validate the given options

if [ "$configFile" = "" ]
then
    echo "A config file must be provided!" >&2
    exit 1
fi

if [ "$processManager" = "" ]
then
    echo "No process manager was specified!" >&2
    exit 1
fi

NIXPROC=${NIXPROC:-@NIXPROC@}

createManagedProcessExpr="${createManagedProcessExpr:-$NIXPROC/create-managed-process/universal/create-managed-process-universal.nix}"

# Build the configuration
nix-build $NIXPROC/create-managed-process/agnostic/create-managed-process-from-config.nix --arg configFile $configFile --arg createManagedProcessExpr "$createManagedProcessExpr" --argstr processManager $processManager $stateDirArg $runtimeDirArg $logDirArg $tmpDirArg $cacheDirArg $spoolDirArg $lockDirArg $libDirArg $forceDisableUserChangeArg $noOutLinkArg $showTraceArg
