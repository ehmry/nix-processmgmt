#!/bin/bash
set -e
shopt -s nullglob

# Shows the usage of this command to the user

showUsage()
{
    cat <<EOF
Usage: $0 [OPTION] PATH

Deploys a prebuilt sysvinit configuration profile.

Options:
  -p, --profile=NAME    Name of the Nix profile that stores the sysvinit scripts
                        (defaults to: processes)
  -o, --old-profile=PATH
                        Path to the previously deployed Nix profile (by default,
                        it gets auto detected)
  -h, --help            Shows the usage of this command

Environment:
  NIX_STATE_DIR        Overrides the location of the Nix state directory
  BSDRC_TARGET_DIR     Directory in which the BSD rc scripts reside (defaults to:
                       /usr/local/etc/rc.d)
EOF
}

# Parse valid argument options

PARAMS=`@getopt@ -n $0 -o p:o:h -l profile:,old-profile:,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

# Evaluate valid options

eval set -- "$PARAMS"

while [ "$1" != "--" ]
do
    case "$1" in
        -p|--profile)
            profile="$2"
            ;;
        -o|--old-profile)
            oldProfilePath="$2"
            ;;
        -h|--help)
            showUsage
            exit 0
            ;;
    esac

    shift
done

shift

profilePath="$1"

# Validate the given options

source @commonchecks@

checkNixStateDir
checkProfile
composeOldProfilePath

BSDRC_TARGET_DIR=${BSDRC_TARGET_DIR:-/usr/local/etc/rc.d}

rcnew="$profilePath/etc/rc.d"
rcold="$oldProfilePath/etc/rc.d"

# Determine paths of old scripts

oldscripts=()

if [ -d "$rcold" ]
then
    echo "Using previous Nix profile: $rcold" >&2

    for i in $(rcorder $rcold/* | tail -r)
    do
        currentPath=$(readlink -f $i)
        oldscripts+=($currentPath)
    done
fi

# Determine paths of new scripts

newscripts=()

for i in $(rcorder $rcnew/*)
do
    currentPath=$(readlink -f $i)
    newscripts+=($currentPath)
done

# Create new groups and users
createNewGroups
createNewUsers

# Stop and remove obsolete scripts

for i in $(rcorder $rcold/* | tail -r)
do
    if ! containsElement "$(readlink -f "$i")" "${newscripts[@]}"
    then
        if [ "$enableAtBoot" = "1" ]
        then
            scriptName="$(basename $i)"
            /usr/local/etc/$scriptName stop || true
            @sed@ -i -e "/^${scriptName}_enabled=YES"'$'"/d" /etc/rc.conf
            rm -f /usr/local/etc/$scriptName
        else
            "$i" onestop
        fi
    fi
done

# Install and start new scripts

for i in $(rcorder $rcnew/*)
do
    if ! containsElement "$(readlink -f "$i")" "${oldscripts[@]}"
    then
        if [ "$enableAtBoot" = "1" ]
        then
            scriptName="$(basename $i)"
            ln -sfn $rcnew/$scriptName /usr/local/etc
            echo "${scriptName}_enabled=YES" >> /etc/rc.conf
            /usr/local/etc/$scriptName start
        else
            "$i" onestart
        fi
    fi
done

# Delete obsolete users and groups
deleteObsoleteUsers
deleteObsoleteGroups

# Set new profile
setNixProfile
