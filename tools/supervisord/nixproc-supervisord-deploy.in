#!/bin/bash
set -e
shopt -s nullglob

showUsage()
{
    me="$(basename "$0")"

    cat <<EOF
Usage: $me [OPTION] PATH

Deploys a prebuilt systemd configuration profile.

Options:
  -p, --profile=NAME    Name of the Nix profile that stores the sysvinit scripts
                        (defaults to: processes)
  -o, --old-profile=PATH
                        Path to the previously deployed Nix profile (by default,
                        it gets auto detected)
      --state-dir       Changes the directory in which the state of the
                        processes are stored
      --runtime-dir     Changes the directory in which the PID files are stored
      --log-dir         Changes the directory in which the log files are stored
      --tmp-dir         Changes the directory in which temp files are stored
      --cache-dir       Changes the directory in which cache files are stored
      --spool-dir       Changes the directory in which spool files are stored
      --lock-dir        Changes the directory in which lock files are stored
      --lib-dir         Changes the directory in which state files are stored
      --force-disable-user-change
                        Forces to not create users, groups or change user
                        permissions
  -h, --help            Shows the usage of this command

Environment:
  NIX_STATE_DIR        Overrides the location of the Nix state directory
  SUPERVISORD_CONF_DIR Directory if which the supervisord.conf resides
  NIXPROC_STATE_DIR    Changes the directory in which the state of the
                       processes is stored
  NIXPROC_RUNTIME_DIR  Changes the directory in which the PID files are stored
  NIXPROC_LOG_DIR      Changes the directory in which log files are stored
  NIXPROC_TMP_DIR      Changes the directory in which temp files are stored
  NIXPROC_CACHE_DIR    Changes the directory in which cache files are stored
  NIXPROC_SPOOL_DIR    Changes the directory in which spool files are stored
  NIXPROC_LOCK_DIR     Changes the directory in which lock files are stored
  NIXPROC_LIB_DIR      Changes the directory in which state files are stored
  NIXPROC_FORCE_DISABLE_USER_CHANGE
                       Forces to not create users, groups or change user
                       permissions
EOF
}

# Parse valid argument options

PARAMS=`@getopt@ -n $0 -o p:o:h -l undeploy,profile:,old-profile:,state-dir:,runtime-dir:,log-dir:,tmp-dir:,cache-dir:,spool-dir:,lock-dir:,lib-dir:,force-disable-user-change,show-trace,extra-params:,help -- "$@"`

if [ $? != 0 ]
then
    showUsage
    exit 1
fi

# Evaluate valid options

eval set -- "$PARAMS"

while [ "$1" != "--" ]
do
    case "$1" in
        -p|--profile)
            profile="$2"
            ;;
        -o|--old-profile)
            oldProfilePath="$2"
            ;;
        --state-dir)
            stateDirArg="--state-dir $2"
            ;;
        --runtime-dir)
            runtimeDirArg="--runtime-dir $2"
            ;;
        --log-dir)
            logDirArg="--log-dir $2"
            ;;
        --tmp-dir)
            tmpDirArg="--tmp-dir $2"
            ;;
        --cache-dir)
            cacheDirArg="--cache-dir $2"
            ;;
        --spool-dir)
            spoolDirArg="--spool-dir $2"
            ;;
        --lock-dir)
            lockDirArg="--lock-dir $2"
            ;;
        --lib-dir)
            libDirArg="--lib-dir $2"
            ;;
        --force-disable-user-change)
            forceDisableUserChangeArg="--force-disable-user-change"
            ;;
        -h|--help)
            showUsage
            exit 0
            ;;
    esac

    shift
done

shift

profilePath="$1"

# Validate the given options

source @commonchecks@

checkNixStateDir
checkProfile
composeOldProfilePath

source @supervisordchecks@

checkSupervisordConfDir

# Initialize all state

nixproc-init-state $stateDirArg $runtimeDirArg $logDirArg $tmpDirArg $cacheDirArg $spoolDirArg $lockDirArg $libDirArg $forceDisableUserChangeArg

# Determine paths of old units

oldunits=()

if [ -d "$oldProfilePath" ]
then
    for i in $oldProfilePath/conf.d/*.conf
    do
        currentPath=$(@readlink@ -f "$i")
        oldunits+=($currentPath)
    done
fi

# Determine paths of new units

newunits=()

for i in $profilePath/conf.d/*.conf
do
    currentPath=$(@readlink@ -f "$i")
    newunits+=($currentPath)
done

if [ -d "$oldProfilePath" ]
then
    # Remove obsolete units

    for i in $oldProfilePath/conf.d/*.conf
    do
        if ! containsElement "$(@readlink@ -f "$i")" "${newunits[@]}"
        then
            unitTargetPath="$SUPERVISORD_CONF_DIR/conf.d/$(basename "$i")"
            rm -f "$unitTargetPath"
        fi
    done
fi

# Add new units

for i in $profilePath/conf.d/*.conf
do
    if ! containsElement "$(@readlink@ -f "$i")" "${oldunits[@]}"
    then
        ln -sfn "$(@readlink@ -f "$i")" $SUPERVISORD_CONF_DIR/conf.d/$(basename "$i")
    fi
done

# Create new groups and users
createNewGroups
createNewUsers

# Reload and update the supervisord configuration
supervisorctl reread
supervisorctl update

# Delete obsolete users and groups
deleteObsoleteUsers
deleteObsoleteGroups

# Set new profile
setNixProfile
